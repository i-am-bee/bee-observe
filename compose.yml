name: 'bee-observe'
services:
  mongo:
    image: mongo:7
    ports:
      - '${DATABASE_EXPOSED_PORT:-27019}:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-mongo}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    ports:
      - '${REDIS_EXPOSED_PORT:-6380}:6379'
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 10s
      timeout: 5s
      retries: 5
  mlflow:
    image: bitnami/mlflow:2.17.2
    restart: always
    ports:
      - '${MLFLOW_EXPOSED_PORT:-8080}:8080'
    entrypoint:
      [
        '/bin/bash',
        '-c',
        '/entrypoint.sh && mlflow server --app-name basic-auth --host 0.0.0.0 --port 8080'
      ]
    security_opt:
      - 'label=disable'
    volumes:
      - ./entrypoint.sh:/entrypoint.sh:ro
  wait_for_mlflow:
    image: curlimages/curl:latest
    depends_on:
      mlflow:
        condition: service_started
    entrypoint:
      [
        'sh',
        '-c',
        "while ! curl --silent --fail http://mlflow:8080/health; do echo 'Waiting for Mlflow...'; sleep 5; done"
      ]
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.114.0
    restart: always
    ports:
      - '4318:4318' # OTLP HTTP receiver
      - '13133:13133' # Health Check
      - '55679:55679' # Prometheus scraping port
    command: ['--config=/etc/otel-collector-config.yaml']
    volumes:
      - ./scripts/open_telemetry_collector/otel-collector-config-docker.yaml:/etc/otel-collector-config.yaml
  observe_api:
    build:
      context: .
      args:
        GIT_TAG: ${TAG:-testing}
        BUILD_DATETIME: ${BUILD_DATETIME:-}
    ports:
      - '${OBSERVE_API_EXPOSED_PORT:-4319}:4319'
    env_file:
      - .env.testing.docker
    command: >
      /bin/sh -c "
        touch tsconfig.json &&
        NODE_ENV=production npx mikro-orm --config dist/mikro-orm.config.js migration:up &&
        node ./dist/index.js
      "
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:4319/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      mlflow:
        condition: service_started
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      otel-collector:
        condition: service_started
  wait_for_api:
    image: curlimages/curl:latest
    depends_on:
      observe_api:
        condition: service_healthy
    entrypoint:
      [
        'sh',
        '-c',
        "while ! curl --silent --fail http://observe_api:4319/health; do echo 'Waiting for API...'; sleep 5; done"
      ]
